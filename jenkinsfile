pipeline {
    agent any

    environment {
        DOCKER_COMPOSE = 'docker-compose -f /integracion-continua/docker-compose.yml'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    // Construir las imágenes Docker
                    sh "${DOCKER_COMPOSE} build"
                }
            }
        }

        stage('Tag') {
            steps {
                script {
                    // Etiquetar las imágenes construidas
                    // Ajusta los nombres y etiquetas según sea necesario
                    sh 'docker tag php-container:latest php-container:1.0'
                    sh 'docker tag mysql-container:latest mysql-container:1.0'
                    sh 'docker tag jenkins-container:latest jenkins-container:1.0'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Desplegar la aplicación utilizando Docker Compose
                    sh "${DOCKER_COMPOSE} up -d"
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                script {
                    // Verificar que el despliegue fue exitoso
                    // Puedes agregar aquí pasos reales para verificar el despliegue
                    sh 'echo "Verifying deployment..."'
                    sh 'curl -f http://localhost:3000 || exit 1'
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}