pipeline {
    agent any

    environment {
        DOCKER_COMPOSE = 'docker-compose -f docker-compose.yml'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Show Workspace Info') {
            steps {
                script {
                    // Mostrar la ruta completa del workspace
                    sh 'echo "Current workspace directory:"'
                    sh 'pwd'
                    
                    // Listar todos los archivos en el directorio raíz del workspace
                    sh 'echo "Files in the root workspace directory:"'
                    sh 'ls -la'
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    // Construir las imágenes Docker
                    sh "${DOCKER_COMPOSE} build"
                }
            }
        }

        stage('Tag') {
            steps {
                script {
                    // Obtener los nombres de las imágenes generadas por docker-compose
                    sh 'docker images'

                    // Etiquetar las imágenes construidas correctamente
                    sh 'docker tag pipeline_3_php:latest php-container:1.0'
                    sh 'docker tag pipeline_3_jenkins:latest jenkins-container:1.0'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Desplegar la aplicación utilizando Docker Compose
                    sh """
                        MYSQL_CONTAINER_NAME=mysql-container-\$(shuf -i 1000-9999 -n 1) \
                        PHP_CONTAINER_NAME=php-container-\$(shuf -i 1000-9999 -n 1) \
                        JENKINS_CONTAINER_NAME=jenkins-container-\$(shuf -i 1000-9999 -n 1) \
                        MYSQL_PORT=\$(shuf -i 3307-3999 -n 1) \
                        PHP_PORT=\$(shuf -i 8000-8999 -n 1) \
                        JENKINS_PORT1=\$(shuf -i 10000-10999 -n 1) \
                        JENKINS_PORT2=\$(shuf -i 11000-11999 -n 1) \
                        ${DOCKER_COMPOSE} up -d
                    """
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                script {
                    // Verificar que el despliegue fue exitoso
                    // Puedes agregar cualquier otro comando aquí si es necesario
                    sh 'echo "Deployment successful!"'
                }
            }
        }

        stage('Print Jenkins Access Info') {
            steps {
                script {
                    // Imprimir información para acceder a Jenkins
                    sh 'echo "Jenkins is running at http://localhost:${JENKINS_PORT1}/jenkins"'
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
