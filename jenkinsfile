pipeline {
    agent any

    environment {
        DOCKER_COMPOSE = 'docker-compose -f docker-compose.yml'
        MYSQL_CONTAINER_NAME = "mysql-container-${BUILD_ID}"
        PHP_CONTAINER_NAME = "php-container-${BUILD_ID}"
        JENKINS_CONTAINER_NAME = "jenkins-container-${BUILD_ID}"
        MYSQL_PORT = sh(script: 'shuf -i 3307-3999 -n 1', returnStdout: true).trim()
        PHP_PORT = sh(script: 'shuf -i 8000-8999 -n 1', returnStdout: true).trim()
        JENKINS_PORT1 = sh(script: 'shuf -i 10000-10999 -n 1', returnStdout: true).trim()
        JENKINS_PORT2 = sh(script: 'shuf -i 11000-11999 -n 1', returnStdout: true).trim()
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Show Workspace Info') {
            steps {
                script {
                    // Mostrar la ruta completa del workspace
                    sh 'echo "Current workspace directory:"'
                    sh 'pwd'
                    
                    // Listar todos los archivos en el directorio raíz del workspace
                    sh 'echo "Files in the root workspace directory:"'
                    sh 'ls -la'
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    // Construir las imágenes Docker
                    sh "${DOCKER_COMPOSE} build"
                }
            }
        }

        stage('Tag') {
            steps {
                script {
                    // Obtener los nombres de las imágenes generadas por docker-compose
                    sh 'docker images'

                    // Etiquetar las imágenes construidas correctamente
                    sh 'docker tag pipeline_3_php:latest php-container:1.0'
                    sh 'docker tag pipeline_3_jenkins:latest jenkins-container:1.0'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Desplegar la aplicación utilizando Docker Compose con nombres y puertos únicos
                    sh """
                        MYSQL_CONTAINER_NAME=${MYSQL_CONTAINER_NAME} 
                        PHP_CONTAINER_NAME=${PHP_CONTAINER_NAME} 
                        JENKINS_CONTAINER_NAME=${JENKINS_CONTAINER_NAME} 
                        MYSQL_PORT=${MYSQL_PORT} 
                        PHP_PORT=${PHP_PORT} 
                        JENKINS_PORT1=${JENKINS_PORT1} 
                        JENKINS_PORT2=${JENKINS_PORT2} 
                        ${DOCKER_COMPOSE} up -d
                    """
                }
            }
        }

        stage('Print Jenkins Access Info') {
            steps {
                script {
                    // Imprimir información de acceso a Jenkins
                    sh """
                        echo "Jenkins is running on:"
                        echo "Jenkins UI: http://localhost:${JENKINS_PORT1}/jenkins"
                        echo "Jenkins Agent Port: ${JENKINS_PORT2}"
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
